##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.2.0-B44] date: [Wed Mar 13 18:01:23 CET 2024]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = stm32h745-ai_CM7


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -O0


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build
TFLITE_LIBNAME = libtflm.a
TFLITE_LIB := $(BUILD_DIR)/$(TFLITE_LIBNAME) # it is placed inside the build

######################################
# source
######################################
# C sources
C_SOURCES =  \
../../CM7/X-CUBE-AI/App/sine_model_data.c \
../../CM7/X-CUBE-AI/App/sine_model.c \
../../CM7/X-CUBE-AI/App/sine_model_data_params.c \
../../CM7/Core/Src/main.c \
../../CM7/Core/Src/gpio.c \
../../CM7/Core/Src/crc.c \
../../CM7/Core/Src/usart.c \
../../CM7/Core/Src/usb_otg.c \
../../CM7/Core/Src/stm32h7xx_it.c \
../../CM7/Core/Src/stm32h7xx_hal_msp.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd_ex.c \
../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_usb.c \
../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c  \
../../Middlewares/Third_Party/FreeRTOS/Source/croutine.c \
../../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c \
../../Middlewares/Third_Party/FreeRTOS/Source/list.c \
../../Middlewares/Third_Party/FreeRTOS/Source/queue.c \
../../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c \
../../Middlewares/Third_Party/FreeRTOS/Source/tasks.c \
../../Middlewares/Third_Party/FreeRTOS/Source/timers.c \
../../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c \
../../CM7/Core/Src/stm32h7xx_hal_timebase_tim.c \
../../CM7/Core/Src/tim.c \
../../CM7/Core/Src/syscalls.c \
../../Common/Src/heap_useNewlib_ST.c
# Excluded according to https://nadler.com/embedded/newlibAndFreeRTOS.html
# ../../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c

CXX_SOURCES = \
../../CM7/Core/Src/freertos.cc \
../../CM7/Core/Src/hello_world/hello_world_test.cc \
../../CM7/Core/Src/hello_world/models/hello_world_float_model_data.cc \
../../CM7/Core/Src/hello_world/models/hello_world_int8_model_data.cc

# ASM sources
ASM_SOURCES =  \
startup_stm32h745xx_CM7.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CXX = $(GCC_PATH)/$(PREFIX)g++
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
DP = $(GCC_PATH)/$(PREFIX)objdump
AR = $(GCC_PATH)/$(PREFIX)ar
else
CC = $(PREFIX)gcc
CXX = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
DP = $(PREFIX)objdump
AR = $(PREFIX)ar
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
# ARFLAGS
ARFLAGS := -rcs

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DCORE_CM7 \
-DUSE_HAL_DRIVER \
-DSTM32H745xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-I../../CM7/Core/Inc \
-I../../Middlewares/ST/AI/Inc \
-I../../CM7/X-CUBE-AI/App \
-I../../Drivers/STM32H7xx_HAL_Driver/Inc \
-I../../Drivers/STM32H7xx_HAL_Driver/Inc/Legacy \
-I../../Drivers/CMSIS/Device/ST/STM32H7xx/Include \
-I../../Drivers/CMSIS/Include \
-I../../Middlewares/Third_Party/FreeRTOS/Source/include \
-I../../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F

CXX_INCLUDES = $(C_INCLUDES) \
-I/usr/lib/arm-none-eabi/include/c++/10.3.1 \
-I../../CM7/Core/Src/hello_world

# compile gcc flags
ASFLAGS = $(OPT) -Wall -fdata-sections -ffunction-sections

# todo remove the parts that are not flags so that it can be customized in dep libs
CFLAGS += \
	$(OPT) \
	-Wall \
	-fdata-sections \
	-ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g3 -gdwarf-2
endif

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

CXXFLAGS = \
	$(OPT) \
	-std=c++17 \
	-Wall \
	-fdata-sections \
	-ffunction-sections \
	-fno-rtti \
  	-fno-exceptions \
  	-fno-threadsafe-statics \
	-fno-unwind-tables \
	-fmessage-length=0

ifeq ($(DEBUG), 1)
CXXFLAGS += -g3 -gdwarf-2
endif

# Generate dependency information
CXXFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = stm32h745xx_flash_CM7.ld

# libraries
LIBS = -lc -lm -lnosys
LIBDIR =  \
-L../../Middlewares/ST/AI/Lib
LDFLAGS = $(MCU) -specs=nano.specs -u _printf_float -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin $(BUILD_DIR)/$(TARGET).list

#######################################
# tflite
#######################################
# todo own built lib
LIBS += -l:libtflm.a #-l:libtensorflow-microlite.a #-l:$(TFLITE_LIBNAME)
LIBDIR += -L../../Middlewares/Third_Party/tflite_micro #-L$(BUILD_DIR)
CXX_INCLUDES += \
	-I$(TFLITE_SRC_DIR) \
	-I$(TFLITE_SRC_DIR)/third_party/gemmlowp \
	-I$(TFLITE_SRC_DIR)/third_party/flatbuffers/include \
	-I$(TFLITE_SRC_DIR)/third_party/kissfft \
	-I$(TFLITE_SRC_DIR)/third_party/kissfft/tools \
	-I$(TFLITE_SRC_DIR)/third_party/ruy
# cmsis_nn includes
CXX_INCLUDES += \
	-I$(TFLITE_SRC_DIR)/third_party/cmsis \
    -I$(TFLITE_SRC_DIR)/third_party/cmsis_nn \
    -I$(TFLITE_SRC_DIR)/third_party/cmsis_nn/Include \
    -I$(TFLITE_SRC_DIR)/third_party/cmsis/CMSIS/Core/Include

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of c++ objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CXX_SOURCES:.cc=.o)))
vpath %.cc $(sort $(dir $(CXX_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(MCU) $(C_DEFS) $(C_INCLUDES) $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.cc Makefile | $(BUILD_DIR) 
	$(CXX) -c $(MCU) $(C_DEFS) $(CXX_INCLUDES) $(CXXFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cc=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(MCU) $(C_DEFS) $(C_INCLUDES) $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(MCU) $(C_DEFS) $(C_INCLUDES) $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile #todo removed this: $(TFLITE_LIB) Makefile
	$(CXX) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	

$(BUILD_DIR)/%.list: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(DP) -h -S $< > $@

$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

include tflite.mk

# *** EOF ***
